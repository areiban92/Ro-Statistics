run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
install.packages("bslib")
install.packages("bslib")
## Dependencies ----
## Add one line by package you want to add as dependency
usethis::use_package( "bslib" )
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Run the application
run_app()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = TRUE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Document and reload your package
golem::document_and_reload()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
contingencia
d
d
d
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
print_dev <- golem::make_dev(print)
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# Document and reload your package
golem::document_and_reload()
devtools::check()
rhub::check_for_cran()
## Run checks ----
## Check the package before sending to prod
devtools::check()
